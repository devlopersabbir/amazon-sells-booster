name: ðŸŽ‡ Build, Release, and Publish Extension ðŸŽ‰

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      - name: Build extension
        run: npm run build

      - name: Set EXTENSION_VERSION environment variable
        run: |
          EXTENSION_VERSION=$(node -p "require('./package.json').version")
          echo "EXTENSION_VERSION=$EXTENSION_VERSION" >> $GITHUB_ENV

      - name: Build Chrome Extension
        run: npm run build:chrome

      - name: Build Firefox Extension
        run: npm run build:firefox

      - name: Zip Chrome Extension
        run: npm run zip:chrome

      - name: Zip Firefox Extension
        run: npm run zip:firefox

      - name: Push release to root/release
        run: |
          VERSION="v${EXTENSION_VERSION}"
          RELEASE_DIR="root/release/$VERSION"
          mkdir -p "$RELEASE_DIR"
          cp -r dist/* "$RELEASE_DIR/"
          cd "$RELEASE_DIR"

          # Initialize git and set identity
          git init
          git config user.name "GitHub Action"
          git config user.email "action@github.com"

          git remote add origin https://github.com/${{ github.repository }}.git
          git checkout -b release-${EXTENSION_VERSION}
          git add .
          git commit -m "Release ${VERSION}"
          git push -u origin release-${EXTENSION_VERSION} --force
        env:
          EXTENSION_VERSION: ${{ env.EXTENSION_VERSION }}
          TOKEN: ${{ secrets.TOKEN }}

      - name: Create GitHub Release
        run: |
          VERSION="v${EXTENSION_VERSION}"
          gh release create "$VERSION" \
            root/release/$VERSION/* \
            --title "Release $VERSION" \
            --notes "Release notes for $VERSION" \
            --draft
        env:
          EXTENSION_VERSION: ${{ env.EXTENSION_VERSION }}
          GH_TOKEN: ${{ secrets.TOKEN }}
